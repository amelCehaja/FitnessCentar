// <auto-generated />
using System;
using FitnessCentar.data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitnessCentar.data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitnessCentar.data.Models.Adresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grad");

                    b.Property<int>("KorisnikID");

                    b.Property<string>("PostanskiBroj");

                    b.Property<string>("Ulica");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Adresa");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.AutorizacijskiToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnickiNalogID");

                    b.Property<string>("Vrijednost");

                    b.Property<DateTime>("VrijemeEvidentiranja");

                    b.HasKey("ID");

                    b.HasIndex("KorisnickiNalogID");

                    b.ToTable("AutorizacijskiToken");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Clanarina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClanID");

                    b.Property<DateTime>("DatumDodavanja");

                    b.Property<DateTime>("DatumIsteka");

                    b.Property<int>("TipClanarineID");

                    b.HasKey("ID");

                    b.HasIndex("ClanID");

                    b.HasIndex("TipClanarineID");

                    b.ToTable("Clanarina");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Dan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DuzinaTreninga");

                    b.Property<int>("RedniBroj");

                    b.Property<int>("SedmicaID");

                    b.HasKey("ID");

                    b.HasIndex("SedmicaID");

                    b.ToTable("Dan");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.DanVjezba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojPonavljanja");

                    b.Property<int>("BrojSetova");

                    b.Property<int>("DanID");

                    b.Property<int?>("DuzinaOdmora");

                    b.Property<int>("RedniBrojVjezbe");

                    b.Property<int>("VjezbaID");

                    b.HasKey("ID");

                    b.HasIndex("DanID");

                    b.HasIndex("VjezbaID");

                    b.ToTable("DanVjezba");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Kategorija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("ID");

                    b.ToTable("Kategorija");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.KategorijaPlanIProgram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<bool>("Obrisan");

                    b.HasKey("ID");

                    b.ToTable("KategorijaPlanIProgram");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.KorisnickiNalog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("Lozinka");

                    b.Property<string>("ResetPasswordCode");

                    b.Property<string>("Tip");

                    b.HasKey("ID");

                    b.ToTable("KorisnickiNalog");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojKartice");

                    b.Property<string>("BrojTelefona");

                    b.Property<DateTime>("DatumRodenja");

                    b.Property<string>("Email");

                    b.Property<string>("Ime");

                    b.Property<string>("JMBG");

                    b.Property<int?>("KorisnickiNalogID");

                    b.Property<bool>("Obrisan");

                    b.Property<string>("Prezime");

                    b.Property<string>("Slika");

                    b.Property<string>("Spol");

                    b.HasKey("ID");

                    b.HasIndex("KorisnickiNalogID")
                        .IsUnique()
                        .HasFilter("[KorisnickiNalogID] IS NOT NULL");

                    b.HasIndex("Email", "BrojKartice", "JMBG")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL AND [BrojKartice] IS NOT NULL AND [JMBG] IS NOT NULL");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.MjerenjeNapredka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID");

                    b.Property<DateTime>("DatumMjerenja");

                    b.Property<string>("Kilaza");

                    b.Property<string>("ObimNoge");

                    b.Property<string>("ObimPrsa");

                    b.Property<string>("ObimRuku");

                    b.Property<string>("ObimStruka");

                    b.Property<string>("ProcenatMasti");

                    b.Property<string>("Visina");

                    b.HasKey("ID");

                    b.HasIndex("ClanID");

                    b.ToTable("MjerenjeNapredka");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.NacinPlacanja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("ID");

                    b.ToTable("NacinPlacanja");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Narudzba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdresaID");

                    b.Property<int>("Cijena");

                    b.Property<DateTime>("DatumVrijeme");

                    b.Property<int>("KorisnikID");

                    b.Property<int>("NacinPlacanjaID");

                    b.Property<int?>("RacunID");

                    b.HasKey("ID");

                    b.HasIndex("AdresaID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("NacinPlacanjaID");

                    b.HasIndex("RacunID");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.NarudzbaStavke", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena");

                    b.Property<int>("Kolicina");

                    b.Property<int>("NarudzbaID");

                    b.Property<int>("StavkaID");

                    b.Property<int?>("VelicinaID");

                    b.HasKey("ID");

                    b.HasIndex("NarudzbaID");

                    b.HasIndex("StavkaID");

                    b.HasIndex("VelicinaID");

                    b.ToTable("NarudzbaStavke");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.PlanIProgram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaID");

                    b.Property<string>("Naziv");

                    b.Property<bool>("Obrisan");

                    b.Property<string>("Opis");

                    b.HasKey("ID");

                    b.HasIndex("KategorijaID");

                    b.ToTable("PlanIProgram");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Podkategorija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaID");

                    b.Property<string>("Naziv");

                    b.HasKey("ID");

                    b.HasIndex("KategorijaID");

                    b.ToTable("Podkategorija");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.PosjecenostClana", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanID");

                    b.Property<DateTime>("Datum");

                    b.Property<DateTime>("VrijemeDolaska");

                    b.Property<DateTime?>("VrijemeOdlaska");

                    b.HasKey("ID");

                    b.HasIndex("ClanID");

                    b.ToTable("PosjecenostClana");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Racun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijeme");

                    b.Property<int>("ZaposlenikID");

                    b.HasKey("ID");

                    b.HasIndex("ZaposlenikID");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Sedmica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlanIProgramID");

                    b.Property<int>("RedniBroj");

                    b.HasKey("ID");

                    b.HasIndex("PlanIProgramID");

                    b.ToTable("Sedmica");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Skladiste", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina");

                    b.Property<int>("StavkaID");

                    b.Property<string>("Velicina");

                    b.HasKey("ID");

                    b.HasIndex("StavkaID");

                    b.ToTable("Skladiste");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Stavka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena");

                    b.Property<string>("Naziv");

                    b.Property<bool>("Obrisan");

                    b.Property<string>("Opis");

                    b.Property<int>("PodkategorijaID");

                    b.Property<string>("Slika");

                    b.HasKey("ID");

                    b.HasIndex("PodkategorijaID");

                    b.ToTable("Stavka");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.TipClanarine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cijena");

                    b.Property<string>("Naziv");

                    b.Property<bool>("Obrisan");

                    b.Property<int>("VrijemeTrajanja");

                    b.HasKey("ID");

                    b.ToTable("TipClanarine");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Vjezba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.Property<string>("Slika");

                    b.HasKey("ID");

                    b.ToTable("Vjezba");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Adresa", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.AutorizacijskiToken", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Clanarina", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Korisnik", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID");

                    b.HasOne("FitnessCentar.data.Models.TipClanarine", "TipClanarine")
                        .WithMany()
                        .HasForeignKey("TipClanarineID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Dan", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Sedmica", "Sedmica")
                        .WithMany()
                        .HasForeignKey("SedmicaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.DanVjezba", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Dan", "Dan")
                        .WithMany()
                        .HasForeignKey("DanID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FitnessCentar.data.Models.Vjezba", "Vjezba")
                        .WithMany()
                        .HasForeignKey("VjezbaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Korisnik", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithOne("Korisnik")
                        .HasForeignKey("FitnessCentar.data.Models.Korisnik", "KorisnickiNalogID");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.MjerenjeNapredka", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Korisnik", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Narudzba", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Adresa", "Adresa")
                        .WithMany()
                        .HasForeignKey("AdresaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FitnessCentar.data.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FitnessCentar.data.Models.NacinPlacanja", "NacinPlacanja")
                        .WithMany()
                        .HasForeignKey("NacinPlacanjaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FitnessCentar.data.Models.Racun", "Racun")
                        .WithMany()
                        .HasForeignKey("RacunID");
                });

            modelBuilder.Entity("FitnessCentar.data.Models.NarudzbaStavke", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FitnessCentar.data.Models.Stavka", "Stavka")
                        .WithMany()
                        .HasForeignKey("StavkaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FitnessCentar.data.Models.Skladiste", "Velicina")
                        .WithMany()
                        .HasForeignKey("VelicinaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.PlanIProgram", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.KategorijaPlanIProgram", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Podkategorija", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.PosjecenostClana", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Korisnik", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Racun", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Korisnik", "Zaposlenik")
                        .WithMany()
                        .HasForeignKey("ZaposlenikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Sedmica", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.PlanIProgram", "PlanIProgram")
                        .WithMany()
                        .HasForeignKey("PlanIProgramID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Skladiste", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Stavka", "Stavka")
                        .WithMany()
                        .HasForeignKey("StavkaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FitnessCentar.data.Models.Stavka", b =>
                {
                    b.HasOne("FitnessCentar.data.Models.Podkategorija", "Podkategorija")
                        .WithMany()
                        .HasForeignKey("PodkategorijaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
